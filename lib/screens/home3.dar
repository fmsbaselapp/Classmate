import 'package:Classmate/services/services.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter_platform_widgets/flutter_platform_widgets.dart';
import '../shared/shared.dart';

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
      future: Global.ausfallRef.getData(),
      builder: (BuildContext context, AsyncSnapshot snap) {
        if (snap.hasData) {
        //  List<Ausfall> ausfall = snap.data;
          return Scaffold(
            drawer: TopicDrawer(ausfall: snap.data),
            body: GridView.count(
              primary: false,
              padding: const EdgeInsets.all(20.0),
              crossAxisSpacing: 10.0,
              crossAxisCount: 2,
            ),
            bottomNavigationBar: AppBottomNav(),
          );
        } else {
          return Text('Loading...'); //
        }
      },
    );
  }
}

class TopicDrawer extends StatelessWidget {
  final List<Ausfall> ausfall;
  TopicDrawer({Key key, this.ausfall});

  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: ListView.separated(
          shrinkWrap: true,
          itemCount: ausfall[0].ausfall.length,
          itemBuilder: (BuildContext context, int idx) {
           
            return Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Padding(
                  padding: EdgeInsets.only(top: 10, left: 10),
                  child: Text(
                 ausfall[0].ausfall.toString(),
                    // textAlign: TextAlign.left,
                    style: (Theme.of(context).textTheme.title)
                  ),
                ),
              ],
            );
          },
          separatorBuilder: (BuildContext context, int idx) => Divider()),
    );
  }
}

/*Scaffold(
      appBar: PreferredSize(
        preferredSize: const Size.fromHeight(100.0),
        child: PlatformAppBar(
          automaticallyImplyLeading: false,
          backgroundColor: Colors.transparent,
          android: (_) => MaterialAppBarData(),
          ios: (_) => CupertinoNavigationBarData(),
          title: new Text(
            'Ausf√§lle',
            style: Theme.of(context).textTheme.title,
          ),
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.only(top: 10, bottom: 20),
            child: SmallButton(
              onPressed: () => Navigator.pushNamed(context, '/settings'),
              child: Text('Einstellungen'),
            ),
          ),












          


        ],
      ),
    );*/
/*SmallButton(
            child: Text('Datenbank'),
            onPressed: () {
              // This points to the collection called 'cities'
              var query = Firestore.instance.collection('cities');
              query.getDocuments().then(
                (querySnapshot) {
                  
                  
                  var data = querySnapshot.documents.map(
                    (documentSnapshot) {
                      
                      
                      print(documentSnapshot.data.map(f));
                    },
                  );
                  // get the data of all the documents into an array
                },
              );
            },
          ),*/
/*
          StreamBuilder(
            stream: Firestore.instance
                .collection('FMS Basel')
                .document('Dienstag')
                .snapshots(),
            builder: (context, snapshot) {
              if (!snapshot.hasData) {
                //todo loadding

                return Text("Loading..",
                    style: Theme.of(context).textTheme.title);
              } else {
                List<String> names = List.from(snapshot.data);
                
                print('SNAP SHOT');
              */

/* return ListView.builder(
                  scrollDirection: Axis.vertical,
                  shrinkWrap: true,
                  itemCount: 1,
                  itemBuilder: (context, index) {
                    return Card(
                      child: Column(
                        children: <Widget>[
                          Text(
                            names[0],
                            style: Theme.of(context).textTheme.subtitle,
                          ),
                          Text(
                            names[1],
                            style: Theme.of(context).textTheme.subtitle,
                          ),
                          Text(
                            names[2],
                            style: Theme.of(context).textTheme.subtitle,
                          ),
                        ],
                      ),
                    );
                  },
                );*/
